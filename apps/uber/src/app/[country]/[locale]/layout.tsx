import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@repo/design-system/globals.css";
import "@/app/globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type RootLayoutProperties = {
  readonly children: React.ReactNode;
  readonly params: Promise<{
    country: string;
    locale: string;
  }>;
};

export default async function RootLayout({
  children,
  params
}: RootLayoutProperties) {

  const { country, locale } = await params;
  // const dictionary = await getDictionary(locale, DictonaryNames.uber);

  return (
    <html
      lang={locale}
      data-country={country}
      data-locale={locale}
    >
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen`}
        >
          {children}
      </body>
    </html>
  );
}
